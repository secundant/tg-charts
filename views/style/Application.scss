@import "config";
@import "mixins";
@import "functions";

.Application {
  width: 100%;
  min-height: 100vh;
  padding-bottom: 70px;
  background-color: #fff;
  transition: get-transition-list($transition-time-regular, background-color);

  &.DarkTheme {
    background-color: $color-dark-theme-bg;

    > .Controls {
      background-color: $color-dark-theme-bg;
      box-shadow: 0 0 8px $color-dark-theme-bg;
    }

    .Button {
      border-color: #465d76;

      @include element-focused {
        border-color: #304257;
      }
      @include element-active {
        background-color: #465d76;
      }

      > .Label {
        color: #f6f6f6;
      }

      > .Status {
        > .Circle {
          background-color: $color-dark-theme-bg;
        }
      }
    }

    .Heading {
      &::after {
        background-color: $color-dark-theme-bg;
        box-shadow: 0 0 8px $color-dark-theme-bg;
      }

      > .Title {
        background-color: $color-dark-theme-bg;
        color: #fff;
      }
    }

    .PositionControl {
      > .Backdrop {
        background-color: rgba(25, 35, 51, 0.8);
      }

      > .Group {
        border-color: $color-dark-theme-control;
      }
      .ResizeControl {
        background-color: $color-dark-theme-control;
      }
    }

    .Tooltip {
      background-color: $color-dark-theme-bg;
      box-shadow: 0 1px 3px darken($color-dark-theme-bg, 10%);

      > .TooltipTitle {
        color: #fff;
      }
    }

    .AxisYText {
      color: #aaa;
    }

    .SVGLine {
      stroke: #3b414b;
    }

    .SVGCircle {
      fill: $color-dark-theme-bg;
    }
  }

  &:not(.DarkTheme) {
    .Button {
      @include element-focused {
        border-color: #ddd;
      }
      @include element-active {
        background-color: #f4f4f8;
      }
    }
  }

  > .Controls {
    position: fixed;
    left: 0;
    right: 0;
    bottom: 0;
    z-index: 10;
    background-color: #fff;
    padding: $offset-small $offset-regular $offset-big;
    box-shadow: 0 0 8px #fff;
    transition: get-transition-list($transition-time-regular, background-color box-shadow);
    color: $color-ui;
    display: flex;
    justify-content: space-between;

    > .Prev {

    }

    > .Next {

    }

    > .Switch {
      font-size: 18px;
      cursor: pointer;
      user-select: none;
    }
  }
}
